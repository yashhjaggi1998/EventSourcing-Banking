/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.5.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package dev.codescreen.codescreen_jl7syjim.api;

import dev.codescreen.codescreen_jl7syjim.model.Error;
import dev.codescreen.codescreen_jl7syjim.model.Ping;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;

public interface PingApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /ping : Tests the availability of the service and returns the current server time.
     *
     * @return ping successful response (status code 200)
     *         or Server Error response (status code 200)
     */
    @Operation(
            operationId = "pingGet",
            summary = "Tests the availability of the service and returns the current server time.",
            responses = {
                    @ApiResponse(responseCode = "200", description = "ping successful response", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = Ping.class))
                    }),
                    @ApiResponse(responseCode = "default", description = "Server Error response", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/ping",
            produces = { "application/json" }
    )

    default ResponseEntity<?> _pingGet(

    ) {
        return pingGet();
    }

    // Override this method
    default  ResponseEntity<?> pingGet() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serverTime\" : \"2000-01-23T04:56:07.000+00:00\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : \"code\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
